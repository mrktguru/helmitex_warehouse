"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞.
–ó–∞–ø—É—Å—Ç–∏—Ç—å –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è —Ä–µ–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏ —Ñ–∞–π–ª–æ–≤.
"""
import os
import shutil
from pathlib import Path

def create_directory_structure():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π."""
    
    base_dir = Path(__file__).parent
    app_dir = base_dir / "helmitex_warehouse"
    
    # –°–æ–∑–¥–∞–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    directories = [
        app_dir,
        app_dir / "database",
        app_dir / "services",
        app_dir / "handlers",
        app_dir / "validators",
        app_dir / "utils",
        base_dir / "alembic" / "versions",
        base_dir / "tests" / "test_services",
        base_dir / "tests" / "test_handlers",
        base_dir / "tests" / "test_validators",
        base_dir / "logs",
        base_dir / "data",
    ]
    
    for directory in directories:
        directory.mkdir(parents=True, exist_ok=True)
        # –°–æ–∑–¥–∞–µ–º __init__.py –≤ Python –ø–∞–∫–µ—Ç–∞—Ö
        if "helmitex_warehouse" in str(directory) or "tests" in str(directory):
            init_file = directory / "__init__.py"
            if not init_file.exists():
                init_file.touch()
    
    print("‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π —Å–æ–∑–¥–∞–Ω–∞")


def move_files():
    """–ü–µ—Ä–µ–º–µ—â–∞–µ—Ç —Ñ–∞–π–ª—ã –≤ –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É."""
    
    base_dir = Path(__file__).parent
    app_dir = base_dir / "helmitex_warehouse"
    
    # –ú–∞–ø–ø–∏–Ω–≥: —Å—Ç–∞—Ä—ã–π –ø—É—Ç—å -> –Ω–æ–≤—ã–π –ø—É—Ç—å
    file_moves = {
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
        "bot.py": app_dir / "bot.py",
        "config.py": app_dir / "config.py",
        
        # Database
        "db.py": app_dir / "database" / "db.py",
        "models.py": app_dir / "database" / "models.py",
        
        # Services (—Ä–∞–∑–±–∏–≤–∞–µ–º services.py –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã)
        "services.py": app_dir / "services" / "_original_services.py",  # –í—Ä–µ–º–µ–Ω–Ω–æ
        
        # Handlers (—Ä–∞–∑–±–∏–≤–∞–µ–º handlers.py –Ω–∞ –æ—Ç–¥–µ–ª—å–Ω—ã–µ —Ñ–∞–π–ª—ã)
        "handlers.py": app_dir / "handlers" / "_original_handlers.py",  # –í—Ä–µ–º–µ–Ω–Ω–æ
        
        # Utils
        "utils.py": app_dir / "utils" / "helpers.py",
    }
    
    for old_path, new_path in file_moves.items():
        old_file = base_dir / old_path
        if old_file.exists():
            shutil.copy2(old_file, new_path)
            print(f"‚úÖ –°–∫–æ–ø–∏—Ä–æ–≤–∞–Ω: {old_path} -> {new_path}")
        else:
            print(f"‚ö†Ô∏è  –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {old_path}")
    
    print("\n‚úÖ –§–∞–π–ª—ã –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã")


def create_init_files():
    """–°–æ–∑–¥–∞–µ—Ç __init__.py —Ñ–∞–π–ª—ã —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ –∏–º–ø–æ—Ä—Ç–∞–º–∏."""
    
    base_dir = Path(__file__).parent
    app_dir = base_dir / "helmitex_warehouse"
    
    # helmitex_warehouse/__init__.py
    (app_dir / "__init__.py").write_text('''"""
Helmitex Warehouse - Telegram –±–æ—Ç –¥–ª—è —Å–∫–ª–∞–¥—Å–∫–æ–≥–æ —É—á–µ—Ç–∞.
"""

__version__ = "1.0.0"
__author__ = "Helmitex Team"

from .config import APP_NAME, APP_VERSION

__all__ = ["APP_NAME", "APP_VERSION"]
''')
    
    # helmitex_warehouse/database/__init__.py
    (app_dir / "database" / "__init__.py").write_text('''"""
–ú–æ–¥—É–ª—å —Ä–∞–±–æ—Ç—ã —Å –±–∞–∑–æ–π –¥–∞–Ω–Ω—ã—Ö.
"""

from .db import engine, SessionLocal, init_db, get_db
from .models import Base, SKU, Category, Recipe, RecipeComponent, Barrel, Production

__all__ = [
    "engine",
    "SessionLocal", 
    "init_db",
    "get_db",
    "Base",
    "SKU",
    "Category",
    "Recipe",
    "RecipeComponent",
    "Barrel",
    "Production",
]
''')
    
    # helmitex_warehouse/services/__init__.py
    (app_dir / "services" / "__init__.py").write_text('''"""
–ë–∏–∑–Ω–µ—Å-–ª–æ–≥–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
"""

# –ò–º–ø–æ—Ä—Ç—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è services.py
''')
    
    # helmitex_warehouse/handlers/__init__.py
    (app_dir / "handlers" / "__init__.py").write_text('''"""
Telegram bot handlers.
"""

# –ò–º–ø–æ—Ä—Ç—ã –±—É–¥—É—Ç –¥–æ–±–∞–≤–ª–µ–Ω—ã –ø–æ—Å–ª–µ —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è handlers.py
''')
    
    # helmitex_warehouse/validators/__init__.py
    (app_dir / "validators" / "__init__.py").write_text('''"""
–í–∞–ª–∏–¥–∞—Ç–æ—Ä—ã –¥–∞–Ω–Ω—ã—Ö.
"""
''')
    
    # helmitex_warehouse/utils/__init__.py
    (app_dir / "utils" / "__init__.py").write_text('''"""
–í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏.
"""
''')
    
    print("‚úÖ __init__.py —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã")


def create_config_files():
    """–°–æ–∑–¥–∞–µ—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã."""
    
    base_dir = Path(__file__).parent
    
    # .env.example
    (base_dir / ".env.example").write_text('''# Telegram Bot Configuration
TELEGRAM_BOT_TOKEN=your_bot_token_here
OWNER_TELEGRAM_ID=your_telegram_id_here

# Database Configuration
DATABASE_URL=postgresql+psycopg2://warehouse:warehouse@localhost:5432/warehouse

# Logging Configuration
LOG_LEVEL=INFO
LOG_FILE=logs/warehouse.log

# Application Settings
DEBUG=False
DB_POOL_SIZE=5
DB_MAX_OVERFLOW=10
DB_ECHO=False
''')
    
    # .gitignore
    (base_dir / ".gitignore").write_text('''# Python
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# Virtual Environment
venv/
env/
ENV/

# IDE
.vscode/
.idea/
*.swp
*.swo
*~

# Environment variables
.env

# Logs
logs/
*.log

# Data
data/

# Database
*.db
*.sqlite

# Testing
.pytest_cache/
.coverage
htmlcov/

# Alembic
alembic/versions/*.pyc
''')
    
    # pytest.ini
    (base_dir / "pytest.ini").write_text('''[pytest]
testpaths = tests
python_files = test_*.py
python_classes = Test*
python_functions = test_*
addopts = 
    -v
    --strict-markers
    --cov=helmitex_warehouse
    --cov-report=html
    --cov-report=term-missing
markers =
    slow: marks tests as slow
    integration: marks tests as integration tests
''')
    
    # pyproject.toml
    (base_dir / "pyproject.toml").write_text('''[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "helmitex-warehouse"
version = "1.0.0"
description = "Telegram bot for warehouse management"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "python-telegram-bot==21.5",
    "SQLAlchemy==2.0.34",
    "psycopg2-binary==2.9.9",
    "python-dotenv==1.0.1",
    "alembic==1.13.1",
    "pydantic==2.5.3",
]

[project.optional-dependencies]
dev = [
    "pytest==7.4.3",
    "pytest-asyncio==0.21.1",
    "pytest-cov==4.1.0",
    "pytest-mock==3.12.0",
    "black==23.12.1",
    "flake8==6.1.0",
    "mypy==1.7.1",
    "isort==5.13.2",
]

[tool.black]
line-length = 100
target-version = ['py310']
include = '\\.pyi?$'

[tool.isort]
profile = "black"
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
''')
    
    print("‚úÖ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã —Å–æ–∑–¥–∞–Ω—ã")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –º–∏–≥—Ä–∞—Ü–∏–∏."""
    print("üöÄ –ù–∞—á–∏–Ω–∞–µ–º –º–∏–≥—Ä–∞—Ü–∏—é —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –ø—Ä–æ–µ–∫—Ç–∞...\n")
    
    create_directory_structure()
    print()
    
    move_files()
    print()
    
    create_init_files()
    print()
    
    create_config_files()
    print()
    
    print("=" * 80)
    print("‚úÖ –ú–ò–ì–†–ê–¶–ò–Ø –ó–ê–í–ï–†–®–ï–ù–ê!")
    print("=" * 80)
    print("\nüìã –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã")
    print("2. –û–±–Ω–æ–≤–∏—Ç–µ –∏–º–ø–æ—Ä—Ç—ã –≤ —Ñ–∞–π–ª–∞—Ö (–±—É–¥–µ—Ç –≤ —Å–ª–µ–¥—É—é—â–µ–º —ç—Ç–∞–ø–µ)")
    print("3. –†–∞–∑–¥–µ–ª–∏—Ç–µ services.py –∏ handlers.py –Ω–∞ –º–æ–¥—É–ª–∏")
    print("4. –£–¥–∞–ª–∏—Ç–µ —Å—Ç–∞—Ä—ã–µ —Ñ–∞–π–ª—ã –∏–∑ –∫–æ—Ä–Ω—è –ø–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏")
    print("5. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: python -m helmitex_warehouse")


if __name__ == "__main__":
    main()

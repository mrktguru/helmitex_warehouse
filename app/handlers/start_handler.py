"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ start –∏ help.
"""
from telegram import Update
from telegram.ext import ContextTypes

from app.database.db import get_db
from app.services import user_service
from app.logger import get_logger

logger = get_logger("start_handler")


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start"""
    user = update.effective_user
    
    # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    with next(get_db()) as db:
        db_user = user_service.get_or_create_user(
            db=db,
            telegram_id=user.id,
            username=user.username,
            full_name=user.full_name
        )
        is_admin = db_user.is_admin
    
    welcome_text = (
        f"üè≠ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Helmitex Warehouse, {user.first_name}!\n\n"
        "–°–∏—Å—Ç–µ–º–∞ —Å–∫–ª–∞–¥—Å–∫–æ–≥–æ —É—á–µ—Ç–∞ –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.\n\n"
        "üìã –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/warehouses - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–∫–ª–∞–¥–∞–º–∏\n"
        "/skus - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–æ–≤–∞—Ä–∞–º–∏\n"
        "/stock - –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Å—Ç–∞—Ç–∫–æ–≤\n"
        "/movements - –ò—Å—Ç–æ—Ä–∏—è –¥–≤–∏–∂–µ–Ω–∏–π\n"
        "/orders - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–∫–∞–∑–∞–º–∏\n"
        "/help - –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º\n"
    )
    
    if is_admin:
        welcome_text += "\nüëë –£ –≤–∞—Å –µ—Å—Ç—å –ø—Ä–∞–≤–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"
    
    await update.message.reply_text(welcome_text)


async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help"""
    help_text = (
        "üìö –°–ø—Ä–∞–≤–∫–∞ –ø–æ –∫–æ–º–∞–Ω–¥–∞–º Helmitex Warehouse:\n\n"
        "üè¢ –°–∫–ª–∞–¥—ã:\n"
        "/warehouses - –°–ø–∏—Å–æ–∫ —Å–∫–ª–∞–¥–æ–≤\n"
        "/add_warehouse - –î–æ–±–∞–≤–∏—Ç—å —Å–∫–ª–∞–¥\n\n"
        "üì¶ –¢–æ–≤–∞—Ä—ã:\n"
        "/skus - –°–ø–∏—Å–æ–∫ —Ç–æ–≤–∞—Ä–æ–≤\n"
        "/add_sku - –î–æ–±–∞–≤–∏—Ç—å —Ç–æ–≤–∞—Ä\n\n"
        "üìä –û—Å—Ç–∞—Ç–∫–∏:\n"
        "/stock - –û—Å—Ç–∞—Ç–∫–∏ –Ω–∞ —Å–∫–ª–∞–¥–∞—Ö\n"
        "/low_stock - –¢–æ–≤–∞—Ä—ã —Å –Ω–∏–∑–∫–∏–º –æ—Å—Ç–∞—Ç–∫–æ–º\n\n"
        "üîÑ –î–≤–∏–∂–µ–Ω–∏—è:\n"
        "/movements - –ò—Å—Ç–æ—Ä–∏—è –¥–≤–∏–∂–µ–Ω–∏–π\n"
        "/add_in - –û–ø—Ä–∏—Ö–æ–¥–æ–≤–∞—Ç—å —Ç–æ–≤–∞—Ä\n"
        "/add_out - –°–ø–∏—Å–∞—Ç—å —Ç–æ–≤–∞—Ä\n"
        "/transfer - –ü–µ—Ä–µ–º–µ—Å—Ç–∏—Ç—å —Ç–æ–≤–∞—Ä\n\n"
        "üìã –ó–∞–∫–∞–∑—ã:\n"
        "/orders - –°–ø–∏—Å–æ–∫ –∑–∞–∫–∞–∑–æ–≤\n"
        "/new_order - –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑\n\n"
        "‚ÑπÔ∏è –ü—Ä–æ—á–µ–µ:\n"
        "/help - –≠—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞\n"
        "/status - –°—Ç–∞—Ç—É—Å —Å–∏—Å—Ç–µ–º—ã\n"
    )
    
    await update.message.reply_text(help_text)


async def status(update: Update, context: ContextTypes.DEFAULT_TYPE):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /status"""
    with next(get_db()) as db:
        from app.services import warehouse_service, sku_service
        
        warehouses_count = len(warehouse_service.get_all_warehouses(db))
        skus_count = len(sku_service.get_all_skus(db))
    
    status_text = (
        "‚úÖ –°–∏—Å—Ç–µ–º–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–æ—Ä–º–∞–ª—å–Ω–æ\n\n"
        f"üè¢ –°–∫–ª–∞–¥–æ–≤: {warehouses_count}\n"
        f"üì¶ –¢–æ–≤–∞—Ä–æ–≤: {skus_count}\n"
        "üìä –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö: –ø–æ–¥–∫–ª—é—á–µ–Ω–∞\n"
        "ü§ñ –ë–æ—Ç: –∞–∫—Ç–∏–≤–µ–Ω"
    )
    
    await update.message.reply_text(status_text)
